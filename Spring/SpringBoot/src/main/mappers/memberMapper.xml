<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

	<!-- interface의 full name을 namespace의 속성으로 사용 : 필수 -->
	<mapper namespace="com.example.demo.mapper.MemberMapper">
	
	<!-- 회원가입 -->
	<insert id="insertMember" parameterType="com.example.demo.domain.MemberInfo">
	insert into member (UID, UNAME, UPW, UPHOTO,code) values (#{uId},#{uName},#{uPW},#{uPhoto},#{code})
	</insert>
	
	<!-- 회원로그인 -->
	<select id="selectMemberById" resultType="com.example.demo.domain.MemberInfo">
		select * from member
		where UID = #{uId}
	</select>
	
	<!-- 회원 정보 수정을 위한 정보 획득 -->
	<select id="selectMemberByIdx" resultType="com.example.demo.domain.MemberInfo">
		select * from member where IDX= #{idx}
	</select>

	<!-- 회원정보수정 -->
<!-- 	<update id="update"
		parameterType="com.example.demo.mapper.MemberMapper">
		update member set uname = #{uName}, upw = #{uPW},
		uphoto= #{uPhoto} where idx = #{idx}
	</update> -->
	
	<!-- 수정 -->
<!-- 	<update id="verify">
	 	update member set verify = "Y"
	 	where UID = #{param1} and CODE = #{param2}
	</update> -->

	<!-- 회원정보 삭제 -->
<!-- 	<delete id="memberDelete">
		delete from member where idx=#{idx}
	</delete> -->
	
	<!-- 아이디 중복체크 -->
<!-- 	<select id="selectMemberById2" resultType="String">
	select * from member where UID = #{uId}
	</select> -->
	
	<!-- 회원 리스트의 개수 : 검색을 위해 동적쿼리 적용 -->
	<!-- <select id="selectTotalCount"
		parameterType="com.example.demo.mapper.MemberMapper.domain.SearchParam"
		resultType="int">
		select count(*) from member

		<where>

			<if test="stype != null">
				<if test="stype == 'both'">
					uid LIKE CONCAT('%', #{keyword}, '%') or uname LIKE
					CONCAT('%', #{keyword}, '%')
				</if>
				<if test="stype == 'id'">
					uid LIKE CONCAT('%', #{keyword}, '%')
				</if>
				<if test="stype == 'name'">
					uname LIKE CONCAT('%', #{keyword}, '%')
				</if>

			</if>


		</where>

	</select> -->


	<!-- 회원 리스트 : 검색을 위해 동적쿼리 적용 -->
	<!-- <select id="selectList" parameterType="map"
		resultType="com.example.demo.mapper.MemberMapper.domain.MemberInfo">
		SELECT * FROM member
		<where>
			<if test="search != null">
				<if test="search.stype == 'both'">
					<include refid="whereId"/>
					<include refid="whereName"/>
					uid LIKE CONCAT('%', #{search.keyword}, '%') or uname LIKE CONCAT('%', #{search.keyword}, '%')
				</if>
				<if test="search.stype == 'id'">				
					<include refid="whereId"/>
					uid LIKE CONCAT('%', #{search.keyword}, '%')
				</if>
				<if test="search.stype == 'name'">
					<include refid="whereName"/> -->
					<!-- uname LIKE CONCAT('%', #{search.keyword}, '%') -->
				<!-- </if>
			</if>
		</where> -->
		<!-- limit #{param1}, #{param2} -->
	<!-- 	limit #{index}, #{MEMBER_CNT_List}
	</select>
		
	<sql id="whereId">
		or uid LIKE CONCAT('%', #{search.keyword}, '%')
	</sql>
		
	<sql id="whereName">
		or uid LIKE CONCAT('%', #{search.keyword}, '%')
	</sql> -->
	
	<!-- 전체 회원 리스트 구하기 -->
	<!-- <select id="selectAllList" resultType="com.bitcamp.mm.member.domain.MemberInfo">
	select * from member order by uname
	</select> -->
	


	</mapper>  
 